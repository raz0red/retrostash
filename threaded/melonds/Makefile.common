MELONDS_VERSION = "0.9.3"

DEFINES += -DMELONDS_VERSION=\"$(MELONDS_VERSION)\"

INCFLAGS    := -I$(CORE_DIR)/libretro-common/include \
               -I$(CORE_DIR) \
               -I$(MELON_DIR)

SOURCES_C   := $(MELON_DIR)/xxhash/xxhash.c \
               $(MELON_DIR)/tiny-AES-c/aes.c \
               $(MELON_DIR)/fatfs/diskio.c \
               $(MELON_DIR)/fatfs/ff.c \
               $(MELON_DIR)/fatfs/ffsystem.c \
               $(MELON_DIR)/fatfs/ffunicode.c \
               $(MELON_DIR)/sha1/sha1.c
SOURCES_S   :=

SOURCES_CXX := $(MELON_DIR)/NDS.cpp \
                    $(MELON_DIR)/AREngine.cpp \
                    $(MELON_DIR)/ARCodeFile.cpp \
                    $(MELON_DIR)/ARM.cpp \
                    $(MELON_DIR)/ARMInterpreter.cpp \
                    $(MELON_DIR)/ARMInterpreter_ALU.cpp \
                    $(MELON_DIR)/ARMInterpreter_Branch.cpp \
                    $(MELON_DIR)/ARMInterpreter_LoadStore.cpp \
                    $(MELON_DIR)/CP15.cpp \
                    $(MELON_DIR)/CRC32.cpp \
                    $(MELON_DIR)/DMA.cpp \
                    $(MELON_DIR)/DSi.cpp \
                    $(MELON_DIR)/DSi_AES.cpp \
                    $(MELON_DIR)/DSi_Camera.cpp \
                    $(MELON_DIR)/DSi_DSP.cpp \
                    $(MELON_DIR)/DSi_I2C.cpp \
                    $(MELON_DIR)/DSi_NAND.cpp \
                    $(MELON_DIR)/DSi_NDMA.cpp \
                    $(MELON_DIR)/DSi_NWifi.cpp \
                    $(MELON_DIR)/DSi_SD.cpp \
                    $(MELON_DIR)/DSi_SPI_TSC.cpp \
                    $(MELON_DIR)/DSiCrypto.cpp \
                    $(MELON_DIR)/GBACart.cpp \
                    $(MELON_DIR)/GPU.cpp \
                    $(MELON_DIR)/GPU2D.cpp \
                    $(MELON_DIR)/GPU2D_Soft.cpp \
                    $(MELON_DIR)/GPU3D.cpp \
                    $(MELON_DIR)/GPU3D_Soft.cpp \
                    $(MELON_DIR)/NDSCart.cpp \
                    $(MELON_DIR)/NDSCart_SRAMManager.cpp \
                    $(MELON_DIR)/RTC.cpp \
                    $(MELON_DIR)/Savestate.cpp \
                    $(MELON_DIR)/SPI.cpp \
                    $(MELON_DIR)/SPU.cpp \
                    $(MELON_DIR)/Wifi.cpp \
                    $(MELON_DIR)/WifiAP.cpp \
                    $(MELON_DIR)/frontend/Util_ROM.cpp \
                    $(CORE_DIR)/config.cpp \
                    $(CORE_DIR)/input.cpp \
                    $(CORE_DIR)/libretro.cpp \
                    $(CORE_DIR)/platform.cpp \
                    $(CORE_DIR)/screenlayout.cpp \
                    $(CORE_DIR)/utils.cpp

# Teakra
SOURCES_CXX += $(MELON_DIR)/teakra/src/ahbm.cpp \
                $(MELON_DIR)/teakra/src/apbp.cpp \
                $(MELON_DIR)/teakra/src/btdmp.cpp \
                $(MELON_DIR)/teakra/src/disassembler_c.cpp \
                $(MELON_DIR)/teakra/src/disassembler.cpp \
                $(MELON_DIR)/teakra/src/dma.cpp \
                $(MELON_DIR)/teakra/src/memory_interface.cpp \
                $(MELON_DIR)/teakra/src/mmio.cpp \
                $(MELON_DIR)/teakra/src/parser.cpp \
                $(MELON_DIR)/teakra/src/processor.cpp \
                $(MELON_DIR)/teakra/src/teakra_c.cpp \
                $(MELON_DIR)/teakra/src/teakra.cpp \
                $(MELON_DIR)/teakra/src/timer.cpp
INCFLAGS    += -I$(MELON_DIR)/teakra/include -I$(MELON_DIR)/teakra/src

ifeq ($(HAVE_OPENGL), 1)
SOURCES_C += $(CORE_DIR)/libretro-common/glsm/glsm.c \
             $(CORE_DIR)/libretro-common/glsym/rglgen.c \
             $(CORE_DIR)/libretro-common/glsym/glsym_gl.c

SOURCES_CXX +=  $(MELON_DIR)/GPU_OpenGL.cpp \
                $(MELON_DIR)/GPU3D_OpenGL.cpp \
                $(MELON_DIR)/OpenGLSupport.cpp \
                $(CORE_DIR)/opengl.cpp

DEFINES += -DHAVE_OPENGL -DOGLRENDERER_ENABLED -DCORE
endif

ifeq ($(HAVE_THREADS), 1)
SOURCES_C += $(CORE_DIR)/libretro-common/rthreads/rthreads.c \
             $(CORE_DIR)/libretro-common/rthreads/rsemaphore.c
DEFINES += -DHAVE_THREADS
endif

ifeq ($(HAVE_WIFI), 1)
DEFINES += -DHAVE_WIFI
endif

# TODO: re-add when neon is implemented upstream
ifeq ($(HAVE_NEON), 1)
# SOURCES_CXX += $(MELON_DIR)/GPU2D_Neon.cpp

# DEFINES += -DNEONGPU_ENABLED
endif

ifdef JIT_ARCH
SOURCES_CXX += $(MELON_DIR)/ARMJIT.cpp \
                $(MELON_DIR)/ARMJIT_Memory.cpp \
                $(MELON_DIR)/ARM_InstrInfo.cpp \
		        $(MELON_DIR)/dolphin/CommonFuncs.cpp

DEFINES += -DJIT_ENABLED
endif

ifeq ($(JIT_ARCH), aarch64)
SOURCES_CXX += $(MELON_DIR)/dolphin/Arm64Emitter.cpp \
                $(MELON_DIR)/dolphin/MathUtil.cpp \
                $(MELON_DIR)/ARMJIT_A64/ARMJIT_Compiler.cpp \
                $(MELON_DIR)/ARMJIT_A64/ARMJIT_ALU.cpp \
                $(MELON_DIR)/ARMJIT_A64/ARMJIT_LoadStore.cpp \
                $(MELON_DIR)/ARMJIT_A64/ARMJIT_Branch.cpp
SOURCES_S += $(MELON_DIR)/ARMJIT_A64/ARMJIT_Linkage.S
INCFLAGS += -I$(MELON_DIR)/ARMJIT_A64/

DEFINES += -DARCHITECTURE_ARM64
endif

ifeq ($(JIT_ARCH), x64)
SOURCES_CXX += $(MELON_DIR)/dolphin/x64ABI.cpp \
                $(MELON_DIR)/dolphin/x64CPUDetect.cpp \
                $(MELON_DIR)/dolphin/x64Emitter.cpp \
                $(MELON_DIR)/ARMJIT_x64/ARMJIT_ALU.cpp \
                $(MELON_DIR)/ARMJIT_x64/ARMJIT_Branch.cpp \
                $(MELON_DIR)/ARMJIT_x64/ARMJIT_Compiler.cpp \
                $(MELON_DIR)/ARMJIT_x64/ARMJIT_GenOffsets.cpp \
                $(MELON_DIR)/ARMJIT_x64/ARMJIT_LoadStore.cpp
SOURCES_S += $(MELON_DIR)/ARMJIT_x64/ARMJIT_Linkage.S
INCFLAGS += -I$(MELON_DIR)/ARMJIT_x64/

DEFINES += -DARCHITECTURE_X64
endif
